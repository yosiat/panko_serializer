"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[924],{7161:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"Installation","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting Started","sidebar_label":"Getting Started"},"sidebar":"docs","previous":{"title":"Introduction","permalink":"/"},"next":{"title":"Performance","permalink":"/performance"}}');var t=i(4848),s=i(8453);const a={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},l=void 0,o={},d=[{value:"Installation",id:"installation",level:2},{value:"Creating your first serializer",id:"creating-your-first-serializer",level:2},{value:"Serializing an object",id:"serializing-an-object",level:3},{value:"Using the serializers in a controller",id:"using-the-serializers-in-a-controller",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"To install Panko, all you need is to add it to your Gemfile:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'\ngem "panko_serializer"\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then, install it on the command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\n bundle install\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"creating-your-first-serializer",children:"Creating your first serializer"}),"\n",(0,t.jsx)(n.p,{children:"Let's create serializer and use it inside Rails controller."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"class PostSerializer < Panko::Serializer\n  attributes :title\nend\n\nclass UserSerializer < Panko::Serializer\n  attributes :id, :name, :age\n\n  has_many :posts, serializer: PostSerializer\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"serializing-an-object",children:"Serializing an object"}),"\n",(0,t.jsx)(n.p,{children:"And now serialize a single object"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"\n# Using Oj serializer\nPostSerializer.new.serialize_to_json(Post.first)\n\n# or, similar to #serializable_hash\nPostSerializer.new.serialize(Post.first).to_json\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-the-serializers-in-a-controller",children:"Using the serializers in a controller"}),"\n",(0,t.jsxs)(n.p,{children:["As you can see, defining serializers is simple and resembles ActiveModelSerializers 0.9,\nTo utilize the ",(0,t.jsx)(n.code,{children:"UserSerializer"})," inside a Rails controller and serialize some users, all we need to do is:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"\nclass UsersController < ApplicationController\n def index\n   users = User.includes(:posts).all\n   render json: Panko::ArraySerializer.new(users, each_serializer: UserSerializer).to_json\n end\nend\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"And voila, we have endpoint which serialize users using Panko!"})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(6540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);